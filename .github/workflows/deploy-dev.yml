# .github/workflows/deploy.yml
name: CD – Deploy Dev Stack

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  sync-compose:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Prepare remote directory
        env:
          HOST: ${{ secrets.DEV_DROPLET_HOST }}
          USER: root
          PASS: ${{ secrets.DEV_DROPLET_PASSWORD }}
        run: |
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no \
            "$USER@$HOST" 'mkdir -p /srv/myapp /srv/myapp/certs'

      - name: Rsync docker-compose + nginx configs
        env:
          HOST: ${{ secrets.DEV_DROPLET_HOST }}
          USER: root
          PASS: ${{ secrets.DEV_DROPLET_PASSWORD }}
        run: |
          sshpass -p "$PASS" rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            "$GITHUB_WORKSPACE/backend/docker-compose.yaml" \
            "$GITHUB_WORKSPACE/backend/nginx/" \
            "$USER@$HOST:/srv/myapp/"

  deploy:
    needs: sync-compose
    runs-on: ubuntu-latest
    steps:
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Pull, issue cert & start services
        env:
          HOST: ${{ secrets.DEV_DROPLET_HOST }}
          USER: root
          PASS: ${{ secrets.DEV_DROPLET_PASSWORD }}
          CERTBOT_EMAIL: zaid.bardan@gmail.com
          DOMAIN: api-dev.karma-grp.com
        run: |
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no $USER@$HOST <<EOF
            set -e
            cd /srv/myapp

            # 1) Pull latest images
            docker compose pull

            # 2) Force-recreate DB & web
            docker compose up -d --force-recreate --remove-orphans db web

            # 3) Issue certificate if missing
            if [ ! -d certs/live/$DOMAIN ]; then
              echo "⚙️ No existing cert for $DOMAIN, requesting via standalone…"
              docker compose run --rm \
                --entrypoint certbot certbot \
                certonly \
                --non-interactive \
                --agree-tos \
                --no-eff-email \
                --email "$CERTBOT_EMAIL" \
                --standalone \
                -d "$DOMAIN"
            else
              echo "✅ Cert for $DOMAIN already exists, skipping issuance."
            fi

            # 4) Force-recreate nginx so it picks up the new cert
            docker compose up -d --force-recreate --remove-orphans nginx
          EOF
