name: CD â€“ Deploy Dev Stack

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Rsync docker-compose + nginx configs
        env:
          HOST: ${{ secrets.DEV_DROPLET_HOST }}
          USER: root
          PASS: ${{ secrets.DEV_DROPLET_PASSWORD }}
        run: |
          sshpass -p "$PASS" rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            "$GITHUB_WORKSPACE/backend/docker-compose.yaml" \
            "$GITHUB_WORKSPACE/backend/nginx" \
            "$GITHUB_WORKSPACE/backend/nginx/letsencrypt" \
            "$USER@$HOST:/srv/myapp/"

  deploy:
    needs: sync
    runs-on: ubuntu-latest
    steps:
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Start DB & App
        run: |
          sshpass -p "${{ secrets.DEV_DROPLET_PASSWORD }}" \
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DEV_DROPLET_HOST }} \
            'cd /srv/myapp && \
             docker compose pull db web && \
             docker compose up -d db web'

      - name: Obtain / Renew Cert
        run: |
          sshpass -p "${{ secrets.DEV_DROPLET_PASSWORD }}" \
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DEV_DROPLET_HOST }} \
            'cd /srv/myapp && \
             docker compose run --rm certbot certonly \
               --standalone --non-interactive \
               --agree-tos --email zaid@karma-grp.com \
               -d api-dev.karma-grp.com || true'

      - name: Launch Nginx + Migrations
        run: |
          sshpass -p "${{ secrets.DEV_DROPLET_PASSWORD }}" \
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DEV_DROPLET_HOST }} \
            'cd /srv/myapp && \
             docker compose up -d nginx migrate'
