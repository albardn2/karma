name: CD â€“ Migrate Dev DB

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  sync-compose:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Prepare remote directory
        env:
          HOST: ${{ secrets.DEV_DROPLET_HOST }}
          USER: root
          PASS: ${{ secrets.DEV_DROPLET_PASSWORD }}
        run: |
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no \
            "$USER@$HOST" "mkdir -p /srv/myapp"

      - name: Rsync docker-compose.yaml
        env:
          HOST: ${{ secrets.DEV_DROPLET_HOST }}
          USER: root
          PASS: ${{ secrets.DEV_DROPLET_PASSWORD }}
        run: |
          sshpass -p "$PASS" rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            "$GITHUB_WORKSPACE/backend/docker-compose.yaml" \
            "$USER@$HOST:/srv/myapp/docker-compose.yaml"

  migrate:
    name: Run DB migrations
    needs: sync-compose
    runs-on: ubuntu-latest
    steps:
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: SSH, login to GHCR & run migrations
        run: |
          sshpass -p "${{ secrets.DEV_DROPLET_PASSWORD }}" \
            ssh -o StrictHostKeyChecking=no root@${{ secrets.DEV_DROPLET_HOST }} "\
              # ensure Docker is installed and running
              apt-get update && apt-get install -y curl && \
              curl -fsSL https://get.docker.com | sh && \
              systemctl enable --now docker && \
              # log in to GHCR (secret PAT masked in logs)
              echo '${{ secrets.CR_PAT }}' | docker login ghcr.io \
                -u 'albardn2' --password-stdin && \
              # pull & run your migrate service
              cd /srv/myapp && \
              docker compose pull && \
              docker compose run --rm migrate\
            "