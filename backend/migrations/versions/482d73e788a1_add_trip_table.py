"""add trip table

Revision ID: 482d73e788a1
Revises: f0bc3fa89804
Create Date: 2025-06-04 22:11:46.903246

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '482d73e788a1'
down_revision: Union[str, None] = 'f0bc3fa89804'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('trip',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('geometry', geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('vehicle_uuid', sa.String(length=36), nullable=False),
    sa.Column('service_area_uuid', sa.String(length=36), nullable=True),
    sa.Column('distribution_area', geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.Column('start_warehouse_uuid', sa.String(length=36), nullable=True),
    sa.Column('end_warehouse_uuid', sa.String(length=36), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('start_point', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('end_point', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('workflow_execution_uuid', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['end_warehouse_uuid'], ['warehouse.uuid'], ),
    sa.ForeignKeyConstraint(['service_area_uuid'], ['service_area.uuid'], ),
    sa.ForeignKeyConstraint(['start_warehouse_uuid'], ['warehouse.uuid'], ),
    sa.ForeignKeyConstraint(['vehicle_uuid'], ['vehicle.uuid'], ),
    sa.ForeignKeyConstraint(['workflow_execution_uuid'], ['workflow_execution.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_trip_start_point', table_name='trip', postgresql_using='gist')
    op.drop_index('idx_trip_geometry', table_name='trip', postgresql_using='gist')
    op.drop_index('idx_trip_end_point', table_name='trip', postgresql_using='gist')
    op.drop_index('idx_trip_distribution_area', table_name='trip', postgresql_using='gist')
    op.drop_table('trip')
    # ### end Alembic commands ###
