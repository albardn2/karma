"""initial

Revision ID: 3967d7ac6583
Revises: 
Create Date: 2025-04-26 22:28:25.523845

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3967d7ac6583'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('permission_scope', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('phone_number', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('customer',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('email_address', sa.String(length=120), nullable=True),
    sa.Column('company_name', sa.String(length=120), nullable=False),
    sa.Column('full_name', sa.String(length=120), nullable=False),
    sa.Column('phone_number', sa.String(length=50), nullable=False),
    sa.Column('full_address', sa.Text(), nullable=False),
    sa.Column('business_cards', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=120), nullable=False),
    sa.Column('coordinates', sa.String(length=120), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('email_address')
    )
    op.create_table('employee',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('email_address', sa.String(length=120), nullable=True),
    sa.Column('full_name', sa.String(length=120), nullable=False),
    sa.Column('phone_number', sa.String(length=50), nullable=False),
    sa.Column('full_address', sa.Text(), nullable=True),
    sa.Column('identification', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('role', sa.String(length=120), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('image', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('email_address')
    )
    op.create_table('financial_account',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('account_name', sa.String(length=120), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=120), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('material',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('measure_unit', sa.String(length=120), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('sku', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=120), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('sku')
    )
    op.create_table('vendor',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('email_address', sa.String(length=120), nullable=True),
    sa.Column('company_name', sa.String(length=120), nullable=False),
    sa.Column('full_name', sa.String(length=120), nullable=False),
    sa.Column('phone_number', sa.String(length=50), nullable=False),
    sa.Column('full_address', sa.Text(), nullable=True),
    sa.Column('business_cards', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=120), nullable=True),
    sa.Column('coordinates', sa.String(length=120), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('email_address')
    )
    op.create_table('warehouse',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('coordinates', sa.String(length=120), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('name')
    )
    op.create_table('batch',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('type', sa.String(length=120), nullable=False),
    sa.Column('material_uuid', sa.String(length=36), nullable=False),
    sa.Column('batch_id', sa.String(length=120), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('data', sa.Text(), nullable=True),
    sa.Column('cost_per_unit', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=120), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['material_uuid'], ['material.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('customer_order',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('customer_uuid', sa.String(length=36), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['customer_uuid'], ['customer.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('expense',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=120), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('vendor_uuid', sa.String(length=36), nullable=True),
    sa.Column('category', sa.String(length=120), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['vendor_uuid'], ['vendor.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('inventory',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('material_uuid', sa.String(length=36), nullable=True),
    sa.Column('warehouse_uuid', sa.String(length=36), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('lot_id', sa.String(length=120), nullable=False),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('cost_per_unit', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=120), nullable=False),
    sa.Column('current_quantity', sa.Float(), nullable=False),
    sa.Column('original_quantity', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['material_uuid'], ['material.uuid'], ),
    sa.ForeignKeyConstraint(['warehouse_uuid'], ['warehouse.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('pricing',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('material_uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('price_per_unit', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=120), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['material_uuid'], ['material.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('purchase_order',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('vendor_uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('currency', sa.String(length=120), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('payout_due_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['vendor_uuid'], ['vendor.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('transaction',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=120), nullable=False),
    sa.Column('from_account_uuid', sa.String(length=36), nullable=True),
    sa.Column('to_account_uuid', sa.String(length=36), nullable=True),
    sa.Column('exchange_rate', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['from_account_uuid'], ['financial_account.uuid'], ),
    sa.ForeignKeyConstraint(['to_account_uuid'], ['financial_account.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('customer_order_item',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('customer_order_uuid', sa.String(length=36), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit', sa.String(length=120), nullable=False),
    sa.Column('material_uuid', sa.String(length=36), nullable=False),
    sa.Column('is_fulfilled', sa.Boolean(), nullable=True),
    sa.Column('fulfilled_at', sa.DateTime(), nullable=True),
    sa.Column('quantity_shipped', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['customer_order_uuid'], ['customer_order.uuid'], ),
    sa.ForeignKeyConstraint(['material_uuid'], ['material.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('invoice',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('customer_uuid', sa.String(length=36), nullable=False),
    sa.Column('customer_order_uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('currency', sa.String(length=120), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['customer_order_uuid'], ['customer_order.uuid'], ),
    sa.ForeignKeyConstraint(['customer_uuid'], ['customer.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('purchase_order_item',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('purchase_order_uuid', sa.String(length=36), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price_per_unit', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=120), nullable=False),
    sa.Column('unit', sa.String(length=120), nullable=False),
    sa.Column('material_uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_fulfilled', sa.Boolean(), nullable=True),
    sa.Column('fulfilled_at', sa.DateTime(), nullable=True),
    sa.Column('quantity_received', sa.Float(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['material_uuid'], ['material.uuid'], ),
    sa.ForeignKeyConstraint(['purchase_order_uuid'], ['purchase_order.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('fixed_asset',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('purchase_date', sa.DateTime(), nullable=False),
    sa.Column('current_value', sa.Float(), nullable=False),
    sa.Column('annual_depreciation_rate', sa.Float(), nullable=False),
    sa.Column('purchase_order_item_uuid', sa.String(length=36), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('material_uuid', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['material_uuid'], ['material.uuid'], ),
    sa.ForeignKeyConstraint(['purchase_order_item_uuid'], ['purchase_order_item.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('invoice_item',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('invoice_uuid', sa.String(length=36), nullable=False),
    sa.Column('customer_order_item_uuid', sa.String(length=36), nullable=False),
    sa.Column('price_per_unit', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['customer_order_item_uuid'], ['customer_order_item.uuid'], ),
    sa.ForeignKeyConstraint(['invoice_uuid'], ['invoice.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('credit_note_item',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=120), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.Column('invoice_item_uuid', sa.String(length=36), nullable=True),
    sa.Column('customer_order_item_uuid', sa.String(length=36), nullable=True),
    sa.Column('customer_uuid', sa.String(length=36), nullable=True),
    sa.Column('vendor_uuid', sa.String(length=36), nullable=True),
    sa.Column('purchase_order_item_uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['customer_order_item_uuid'], ['customer_order_item.uuid'], ),
    sa.ForeignKeyConstraint(['customer_uuid'], ['customer.uuid'], ),
    sa.ForeignKeyConstraint(['invoice_item_uuid'], ['invoice_item.uuid'], ),
    sa.ForeignKeyConstraint(['purchase_order_item_uuid'], ['purchase_order_item.uuid'], ),
    sa.ForeignKeyConstraint(['vendor_uuid'], ['vendor.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('debit_note_item',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=120), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.Column('invoice_item_uuid', sa.String(length=36), nullable=False),
    sa.Column('customer_order_item_uuid', sa.String(length=36), nullable=False),
    sa.Column('customer_uuid', sa.String(length=36), nullable=False),
    sa.Column('vendor_uuid', sa.String(length=36), nullable=False),
    sa.Column('purchase_order_item_uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['customer_order_item_uuid'], ['customer_order_item.uuid'], ),
    sa.ForeignKeyConstraint(['customer_uuid'], ['customer.uuid'], ),
    sa.ForeignKeyConstraint(['invoice_item_uuid'], ['invoice_item.uuid'], ),
    sa.ForeignKeyConstraint(['purchase_order_item_uuid'], ['purchase_order_item.uuid'], ),
    sa.ForeignKeyConstraint(['vendor_uuid'], ['vendor.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('inventory_event',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('inventory_uuid', sa.String(length=36), nullable=False),
    sa.Column('purchase_order_item_uuid', sa.String(length=36), nullable=True),
    sa.Column('batch_uuid', sa.String(length=36), nullable=True),
    sa.Column('customer_order_item_uuid', sa.String(length=36), nullable=True),
    sa.Column('event_type', sa.String(length=120), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('debit_note_item_uuid', sa.String(length=36), nullable=True),
    sa.Column('credit_note_item_uuid', sa.String(length=36), nullable=True),
    sa.Column('material_uuid', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['batch_uuid'], ['batch.uuid'], ),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['credit_note_item_uuid'], ['credit_note_item.uuid'], ),
    sa.ForeignKeyConstraint(['customer_order_item_uuid'], ['customer_order_item.uuid'], ),
    sa.ForeignKeyConstraint(['debit_note_item_uuid'], ['debit_note_item.uuid'], ),
    sa.ForeignKeyConstraint(['inventory_uuid'], ['inventory.uuid'], ),
    sa.ForeignKeyConstraint(['material_uuid'], ['material.uuid'], ),
    sa.ForeignKeyConstraint(['purchase_order_item_uuid'], ['purchase_order_item.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('payment',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('invoice_uuid', sa.String(length=36), nullable=False),
    sa.Column('financial_account_uuid', sa.String(length=36), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=120), nullable=False),
    sa.Column('payment_method', sa.String(length=120), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('debit_note_item_uuid', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['debit_note_item_uuid'], ['debit_note_item.uuid'], ),
    sa.ForeignKeyConstraint(['financial_account_uuid'], ['financial_account.uuid'], ),
    sa.ForeignKeyConstraint(['invoice_uuid'], ['invoice.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('payout',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_by_uuid', sa.String(length=36), nullable=True),
    sa.Column('purchase_order_uuid', sa.String(length=36), nullable=True),
    sa.Column('expense_uuid', sa.String(length=36), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=120), nullable=False),
    sa.Column('financial_account_uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('employee_uuid', sa.String(length=36), nullable=True),
    sa.Column('credit_note_item_uuid', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['credit_note_item_uuid'], ['credit_note_item.uuid'], ),
    sa.ForeignKeyConstraint(['employee_uuid'], ['employee.uuid'], ),
    sa.ForeignKeyConstraint(['expense_uuid'], ['expense.uuid'], ),
    sa.ForeignKeyConstraint(['financial_account_uuid'], ['financial_account.uuid'], ),
    sa.ForeignKeyConstraint(['purchase_order_uuid'], ['purchase_order.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payout')
    op.drop_table('payment')
    op.drop_table('inventory_event')
    op.drop_table('debit_note_item')
    op.drop_table('credit_note_item')
    op.drop_table('invoice_item')
    op.drop_table('fixed_asset')
    op.drop_table('purchase_order_item')
    op.drop_table('invoice')
    op.drop_table('customer_order_item')
    op.drop_table('transaction')
    op.drop_table('purchase_order')
    op.drop_table('pricing')
    op.drop_table('inventory')
    op.drop_table('expense')
    op.drop_table('customer_order')
    op.drop_table('batch')
    op.drop_table('warehouse')
    op.drop_table('vendor')
    op.drop_table('material')
    op.drop_table('financial_account')
    op.drop_table('employee')
    op.drop_table('customer')
    op.drop_table('user')
    # ### end Alembic commands ###
