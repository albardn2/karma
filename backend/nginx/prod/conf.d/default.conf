# 1) HTTP: ACME + redirect all other traffic
server {
    listen 80;
    server_name api-prod.karma-grp.com;

    # Only serve valid challenge files (404 if missing)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
        # optional: reduce noise in your logs
        access_log off;
        log_not_found off;
    }

    # Everything else â†’ HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# 2) HTTPS: real traffic + ACME path
server {
    listen 443 ssl http2;
    server_name api-prod.karma-grp.com;

    ssl_certificate     /etc/letsencrypt/live/api-prod.karma-grp.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api-prod.karma-grp.com/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # HSTS for extra security
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # ACME challenge can also work over HTTPS
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }

    # Your Flask API
    location / {
        proxy_pass         http://web:5000;
        proxy_set_header   Host                $host;
        proxy_set_header   X-Real-IP           $remote_addr;
        proxy_set_header   X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto   $scheme;
        # optional tuning:
        proxy_read_timeout 90s;
        proxy_buffering    off;
    }
}
